defmodule Volley.Repo.Migrations.CreateMatchesAndEvents do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:scoring_matches, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :a_name, :text, null: false, default: "Team A"
      add :a_score, :bigint, default: 0
      add :b_name, :text, null: false, default: "Team B"
      add :b_score, :bigint, default: 0
    end

    create table(:scoring_events, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :type, :text, null: false
      add :team, :text, null: false

      add :match_id,
          references(:scoring_matches,
            column: :id,
            name: "scoring_events_match_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end
  end

  def down do
    drop constraint(:scoring_events, "scoring_events_match_id_fkey")

    drop table(:scoring_events)

    drop table(:scoring_matches)
  end
end
